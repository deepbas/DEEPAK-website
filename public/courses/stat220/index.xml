<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>üìä STAT 220: Introduction to Data Science | Deepak Bastola</title>
    <link>https://deepbas.netlify.app/courses/stat220/</link>
      <atom:link href="https://deepbas.netlify.app/courses/stat220/index.xml" rel="self" type="application/rss+xml" />
    <description>üìä STAT 220: Introduction to Data Science</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Deepak Bastola</copyright><lastBuildDate>Sun, 24 Jan 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://deepbas.netlify.app/courses/stat220/featured.jpg</url>
      <title>üìä STAT 220: Introduction to Data Science</title>
      <link>https://deepbas.netlify.app/courses/stat220/</link>
    </image>
    
    <item>
      <title>Cache credentials for RStudio and GitHub</title>
      <link>https://deepbas.netlify.app/courses/stat220/tutorials/pat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://deepbas.netlify.app/courses/stat220/tutorials/pat/</guid>
      <description>
&lt;script src=&#34;https://deepbas.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;After you have signed up for a GitHub account and gone through all of the account verification steps, you will need to generate a personal access token (PAT) and let R know what that is. To do this, I suggest following these steps:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Setup options in Git by running the following code chunk in your console:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(usethis)
use_git_config(user.name = &amp;quot;Jane Doe&amp;quot;, user.email = &amp;quot;jane@example.org&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;changing the first two lines to your own name and email (this should be the email associated with your GitHub account).&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Next, you should generate a PAT:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;create_github_token()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;This function will preselect the recommended scopes. I recommend just clicking &amp;quot;Generate token&amp;quot; unless you know of a reason to tweak the scopes. Store this token somewhere, because you‚Äôll never be able to see it again once you leave that page or close the window. Treat this PAT like a password.&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Now that you have credentials, you need to store them. I recommend using the &lt;code&gt;{gitcreds}&lt;/code&gt; package. Run the below chunk (after installing the package if you‚Äôre using your own laptop):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gitcreds)
gitcreds_set()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Respond to the prompt with your personal access token (PAT).&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;You should be setup! Try to clone a GitHub project and talk to me if you still hit issues.&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;acknowledgments&#34; class=&#34;section level2 appendix&#34;&gt;
&lt;h2&gt;Acknowledgments&lt;/h2&gt;
&lt;p&gt;This work is is licensed under a &lt;a href=&#34;http://creativecommons.org/licenses/by-nc/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial 4.0 International License&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Classroom Guide for Stat 220</title>
      <link>https://deepbas.netlify.app/courses/stat220/tutorials/github_stat220/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://deepbas.netlify.app/courses/stat220/tutorials/github_stat220/</guid>
      <description>
&lt;script src=&#34;https://deepbas.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;overview&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;If you are using the maize RStudio server, then you can connect to
GitHub without any extra software downloads. If you are using RStudio on
your computer, then you will need to download Git software (as directed
in &lt;a href=&#34;software.Rmd&#34;&gt;Software in Stat 220&lt;/a&gt;) to use GitHub connected
projects.&lt;/p&gt;
&lt;p&gt;I will host all of our course materials on GitHub, and you will use
GitHub to submit homework and collaborate on projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-setup-with-git-and-github&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting setup with Git and GitHub&lt;/h2&gt;
&lt;p&gt;If you are &lt;strong&gt;not&lt;/strong&gt; working on the maize RStudio server, then make sure
that you have installed all of the software mentioned in &lt;a href=&#34;software.md&#34;&gt;Software in
Stat 220&lt;/a&gt;. In addition, you should install the &lt;code&gt;usethis&lt;/code&gt;
and &lt;code&gt;gitcreds&lt;/code&gt; R packages.&lt;/p&gt;
&lt;p&gt;Everyone needs to connect Git and GitHub by doing the following:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Register for account on GitHub (&lt;a href=&#34;https://github.com/&#34; class=&#34;uri&#34;&gt;https://github.com/&lt;/a&gt;). I recommend
using a username that incorporates your name (e.g., aloy). Please use
your Carleton email with this account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setup options in Git by running the following code chunk in your
console:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(usethis)
use_git_config(user.name = &amp;quot;Jane Doe&amp;quot;, user.email = &amp;quot;jane@example.org&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;changing the first two lines to your own name and email (this should
be the email associated with your GitHub account).&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;(Optional) This step explains how to use GitHub on RStudio without
having to enter your password every time to connect. This is an
optional step since you can still use GitHub without setting up a
SSH key or caching credentials, you will just need to enter your
password every time you push or pull with GitHub. Pick one method
below: cache credentials for HTTPS or SSH. GitHub recommends HTTPS,
so I recommend trying that first.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Strongly recommended:&lt;/strong&gt; Cache credential using a HTTPS linked
project.&lt;/p&gt;
&lt;p&gt;Complete the steps in &lt;a href=&#34;http://happygitwithr.com/credential-caching.html&#34;&gt;Section 10.1 of Happy Git with
R&lt;/a&gt; to get a
personal access token (you will need to install the &lt;code&gt;usethis&lt;/code&gt;
package first). Then, follow the directions in &lt;a href=&#34;https://happygitwithr.com/credential-caching.html#call-an-r-function-to-store-your-credentials&#34;&gt;Section 10.2.1
of Happy Git with
R&lt;/a&gt;
(I‚Äôve had good luck with the &lt;code&gt;gitcreds&lt;/code&gt; package, and it is
installed on maize.)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A second method is to generate a SSH key. First check to see if
you have a SSH key. Go into the shell (again, through RStudio
&lt;code&gt;Tools -&amp;gt; Shell&lt;/code&gt;) and complete on this page
&lt;a href=&#34;http://happygitwithr.com/ssh-keys.html&#34; class=&#34;uri&#34;&gt;http://happygitwithr.com/ssh-keys.html&lt;/a&gt;, which is Chapter 11 in
Happy Git with R.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(optional) Follow the instructions here
(&lt;a href=&#34;http://happygitwithr.com/push-pull-github.html&#34; class=&#34;uri&#34;&gt;http://happygitwithr.com/push-pull-github.html&lt;/a&gt;) to ensure you can
connect to GitHub from your computer. If you can‚Äôt get this command
line push/pull to work that is fine. Try connecting to GitHub via
RStudio, as detailed next. If you can‚Äôt connect via RStudio then
talk to me in student hours.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;individual-assignments&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Individual assignments&lt;/h2&gt;
&lt;p&gt;If you followed the suggestions in the &lt;a href=&#34;rstudio_stat220.md&#34;&gt;Using Rstudio in Stat
220&lt;/a&gt; page, then you should already have an
assignments folder on your computer or maize account.&lt;/p&gt;
&lt;p&gt;Each new assignment/project will be posted as a repository on GitHub and
added directly to your account (within the Stat220 organization). This
repository will contain assignment details (README, .Rmd).&lt;/p&gt;
&lt;div id=&#34;creating-an-individual-assignment-repo-and-project&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Creating an individual assignment repo and project&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Go to our course GitHub organization page
(&lt;a href=&#34;https://deepbas.netlify.app/courses/&#34; class=&#34;uri&#34;&gt;https://deepbas.netlify.app/courses/&lt;/a&gt;) and find your homework repo, such as &lt;code&gt;hw-1-username&lt;/code&gt; (where your username is attached).&lt;/li&gt;
&lt;li&gt;Enter the online assignment repository on GitHub. Click the green
&lt;strong&gt;‚ÄúCode‚Äù&lt;/strong&gt; button. Most of you should just use the default setting
which is to ‚Äúclone‚Äù (copy) using HTTPS. Click the clipboard to the
right of the URL to copy the repo location. (If you are using SSH,
make sure it says ‚ÄúClone with SSH‚Äù in bold in the top left of the
pop-up box. If not, click the ‚ÄúSSH‚Äù button and copy the link in the
box to your clipboard.)&lt;/li&gt;
&lt;li&gt;Now open up RStudio and create a project as follows:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Click the &lt;strong&gt;Project&lt;/strong&gt; button in the upper right corner of your
RStudio window and select &lt;strong&gt;New Project‚Ä¶&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¬†&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Select &lt;strong&gt;Version Control&lt;/strong&gt; and then &lt;strong&gt;New Project&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Paste the link you just copied into the Repository URL box. Leave
the Project directory name blank (or keep the auto-filled name). Use
the &lt;strong&gt;Browse&lt;/strong&gt; button to find your &lt;strong&gt;assignments&lt;/strong&gt; folder, then
click &lt;strong&gt;Create Project&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¬† ¬†&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If you received an error in the above steps, you may have
to clone with HTTPS instead of SSH (or vice versa). You can do this by
again clicking on the ‚ÄúClone or Download‚Äù button in the repository page,
then clicking ‚ÄúUse HTTPS‚Äù in the top right of the pop-up box. Now copy
the link and repeat this step.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;working-on-your-assignment&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Working on your assignment&lt;/h3&gt;
&lt;p&gt;An RStudio project should now open, which will allow you to start
working on your homework assignment. You should see the project
assignment name in the top right side of Rstudio. You will probably see
a blank console screen when you open a new project. Look in the
&lt;strong&gt;Files&lt;/strong&gt; tab for your homework .Rmd file. Click on whatever file you
want to edit (probably the .Rmd file) and edit away. Make sure that your
current assignment‚Äôs project is the one open and showing in the upper
rightproject name. To &lt;strong&gt;open&lt;/strong&gt; a project, click on the &lt;code&gt;.Rproj&lt;/code&gt; file or
use the &lt;strong&gt;Open Project‚Ä¶&lt;/strong&gt; option available in the upper right project
link.&lt;/p&gt;
&lt;div id=&#34;commits&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Commits&lt;/h4&gt;
&lt;p&gt;After you make changes to the homework assignment, commit them. What are
commits you ask? Commits are essentially taking a snapshot of your
projects. Commits save this snapshot to your local version of Git
(located on your hard drive or the maize server). For example, if I make
changes to a code so that it prints ‚ÄúHello world‚Äù, and then commit them
with an informative message, I can look at the history of my commits and
view the code that I wrote at that time. If I made some more changes to
the function that resulted in an error, I could go back to the commit
where the code was originally working. This prevents you from creating
several versions of your homework (homework-v1, homework-v2, ‚Ä¶) or
from trying to remember what your code originally looked like.&lt;/p&gt;
&lt;p&gt;You can make commits in the Git tab in RStudio.&lt;/p&gt;
&lt;p&gt;Click the &lt;strong&gt;Commit&lt;/strong&gt; button in the Git tab. Check the boxes of the files
that you want to commit, enter your commit message (briefly state what
changes have been made), then hit &lt;strong&gt;Commit&lt;/strong&gt;. You can read how to do
this in RStudio in more detail here:
&lt;a href=&#34;http://r-pkgs.had.co.nz/git.html#git-commit&#34; class=&#34;uri&#34;&gt;http://r-pkgs.had.co.nz/git.html#git-commit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Two things about committing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You should &lt;strong&gt;commit somewhat frequently&lt;/strong&gt;. At minimum, if you‚Äôre
doing a homework assignment, you should make a commit each time that
you‚Äôve finished a question.&lt;/li&gt;
&lt;li&gt;Leave &lt;strong&gt;informative commit messages&lt;/strong&gt;. ‚ÄúAdded stuff‚Äù will not help
you if you‚Äôre looking at your commit history in a year. A message
like ‚ÄúAdded initial version of hello-world function‚Äù will be more
useful.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;pushing-changes-to-github&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Pushing changes to Github&lt;/h4&gt;
&lt;p&gt;At some point you‚Äôll want to get the updated version of the assignment
back onto GitHub, either so that we can help you with your code or so
that it can be graded. You will also want to push work frequently when
you have a shared GitHub repo for project collaborations (i.e.¬†more than
one person is working on a project and code). If you are ready to push,
you can again click on the ‚ÄúUp‚Äù &lt;strong&gt;Push&lt;/strong&gt; arrow in the Git tab or in the
Commit pop-up window or in the Git tab (shown above).&lt;/p&gt;
&lt;p&gt;To ‚Äúturn in‚Äù an assignment, all you need to do is push all your relevant
files to Github by the deadline.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;group-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Group work&lt;/h2&gt;
&lt;p&gt;Collaborative Github assignments are pretty similar to individual assignments.&lt;/p&gt;
&lt;div id=&#34;creating-a-grouppartner-assignment-repo-and-project&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Creating a group/partner assignment repo and project&lt;/h3&gt;
&lt;p&gt;Go to our course GitHub organization page(&lt;a href=&#34;https://github.com/stat220-fa21&#34; class=&#34;uri&#34;&gt;https://github.com/stat220-fa21&lt;/a&gt;) and find the repo for your group, for example if your group name is ‚Äúteam01‚Äù the you might find the &lt;code&gt;mp1-team01&lt;/code&gt; repo. Clone this repo to your computer/maize account using the same steps done for an individual assignment (see steps 2-3).&lt;/p&gt;
&lt;div id=&#34;working-with-collaborative-repos&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Working with collaborative repos&lt;/h4&gt;
&lt;p&gt;For group homework, I suggest that only the &lt;em&gt;recorder&lt;/em&gt; edit the group-homework-x.Rmd file to avoid merge conflicts! Other group members can create a new Markdown doc to run and save commands. Only the recorder needs to &lt;strong&gt;push&lt;/strong&gt; changes (answers) to the Github repo and all others can then &lt;strong&gt;pull&lt;/strong&gt; these changes (i.e.¬†the final answers) after the HW is submitted.&lt;/p&gt;
&lt;p&gt;When you are working together on a Github project, you should commit and push your modifications frequently. You will also need to frequently &lt;strong&gt;pull&lt;/strong&gt; updates from Github down to your local version of RStudio. These updates are changes that your teammates have made since your last pull. To pull in changes, click the ‚ÄúDown‚Äù &lt;strong&gt;Pull&lt;/strong&gt; arrow in the Git tab (shown above).&lt;/p&gt;
&lt;p&gt;If you get an error about conflict after pulling or pushing, don‚Äôt freak out! This can happen if you edit a file (usually an .Rmd or .R file) in a location that was also changed by a teammate. When this happens you should attempt to fix the &lt;strong&gt;merge conflict&lt;/strong&gt;. Take a look at &lt;a href=&#34;http://r-pkgs.had.co.nz/git.html#git-pull&#34;&gt;this resource site&lt;/a&gt; and try to fix the merge conflict in Rstudio. Katie also created a diagram shown below that ‚Äúexplains‚Äù how and when conflicts will likely happen and how you can resolve the problems in Rstudio. If that doesn‚Äôt work contact me!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;additional-resources&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Additional resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://happygitwithr.com/&#34;&gt;Happy Git and GitHub for the useR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://r-pkgs.had.co.nz/git.html#git-rstudio&#34;&gt;Rstudio, Git and GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://learngitbranching.js.org/&#34;&gt;Interactive learning guide for Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guides.github.com/&#34;&gt;GitHub Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/F_fPEMnr1OQ&#34;&gt;Git setup for Windows (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kbmSZwK0k-A&amp;amp;t&#34;&gt;Git setup for Mac (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/pAcMgGbCtQw&#34;&gt;How to clone, edit, and push homework assignments with GitHub Classroom (video)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level2 appendix&#34;&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;Most of this content in this guide was taken from
&lt;a href=&#34;https://github.com/jfiksel/github-classroom-for-students&#34; class=&#34;uri&#34;&gt;https://github.com/jfiksel/github-classroom-for-students&lt;/a&gt; and edited
for our classroom use.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reuse&#34; class=&#34;section level2 appendix&#34;&gt;
&lt;h2&gt;Reuse&lt;/h2&gt;
&lt;p&gt;This guide is licensed under the CC BY-NC 3.0 Creative
Commons License.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Software in Stat 220</title>
      <link>https://deepbas.netlify.app/courses/stat220/tutorials/software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://deepbas.netlify.app/courses/stat220/tutorials/software/</guid>
      <description>
&lt;script src=&#34;https://deepbas.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;rrstudio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R/RStudio&lt;/h2&gt;
&lt;p&gt;The use of the R programming language with the RStudio interface is an
essential component of this course. You have two options for using
RStudio:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;server version&lt;/strong&gt; of RStudio on the web at
(&lt;a href=&#34;https://maize.mathcs.carleton.edu&#34; class=&#34;uri&#34;&gt;https://maize.mathcs.carleton.edu&lt;/a&gt;). The advantage of using the
server version is that all of your work will be stored in the cloud,
where it is automatically saved and backed up. This means that you
can access your work from any computer on campus using a web
browser. The downside is that you have to share limited
computational resources with each other! This limitation is
especially pronounced this term when classes are being taught
remotely. We are unsure what type of load will be placed on maize,
so if you can download a local version of R and RStudio, I recommend
you do so. Use your Carleton credentials to access your account and
you need to be running the Carleton VPN (below) to access this
server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;local version&lt;/strong&gt; of RStudio installed on your machine. This
option is highly recommended due to the computational resources this
course demands. The downside to this approach is that your work is
only stored locally, but I get around this problem by keeping all of
my work on GitHub. You will learn how to use GitHub throughout the
course. Both R and RStudio are free and open-source.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing R/RStudio (not needed if you are using the maize
server)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download the latest version of R: &lt;a href=&#34;https://cran.r-project.org/&#34; class=&#34;uri&#34;&gt;https://cran.r-project.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Download the free Rstudio desktop version:
&lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34; class=&#34;uri&#34;&gt;https://www.rstudio.com/products/rstudio/download/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use the default download and install options for each. For R,
download the ‚Äúprecompiled binary‚Äù distribution rather than the
source code&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updating R/RStudio (not needed if you are using the maize
server)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you have used a local version of R/RStudio before and it is still
installed on your machine, then you should make sure that you have
the most recent versions of each program.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To check your version of R, run the command &lt;code&gt;getRversion()&lt;/code&gt; and
compare your version to the newest version posted on
&lt;a href=&#34;https://cran.r-project.org/&#34; class=&#34;uri&#34;&gt;https://cran.r-project.org/&lt;/a&gt;. If you need an update, then
install the newer version using the installation directions
above.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In RStudio, check for updates with the menu option
&lt;code&gt;Help &amp;gt; Check for updates&lt;/code&gt;. Follow directions if an update is
needed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;did-it-work-a-sanity-check-after-your-installupdate&#34;&gt;Did it work? (A sanity check after your install/update)&lt;/h3&gt;
&lt;p&gt;Do whatever is appropriate for your operating system to launch
RStudio. You should get a window similar to the screenshot you see
&lt;a href=&#34;https://www.rstudio.com/wp-content/uploads/2014/04/rstudio-workbench.png&#34;&gt;here&lt;/a&gt;,
but yours will be more boring because you haven‚Äôt written any code
or made any figures yet!&lt;/p&gt;
&lt;p&gt;Put your cursor in the pane labeled Console, which is where you
interact with the live R process. Create a simple object with code
like &lt;code&gt;x &amp;lt;- 2 * 4&lt;/code&gt; (followed by enter or return). Then inspect the
&lt;code&gt;x&lt;/code&gt; object by typing &lt;code&gt;x&lt;/code&gt; followed by enter or return. You should see
the value 8 printed. If this happened, you‚Äôve succeeded in
installing R and RStudio!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;git-and-github&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Git and GitHub&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://happygitwithr.com/big-picture.html#why-git&#34;&gt;Git&lt;/a&gt; is version
control software that you install locally on your computer. Git is
already installed on the maize RStudio server.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://happygitwithr.com/big-picture.html#why-github&#34;&gt;Github&lt;/a&gt; is a
cloud-based service for hosting git projects. It allows multiple users
to share and contribute to projects and it is how you will be submitting
homework assignments and projects for this class. More information about
Github for this class is found in &lt;a href=&#34;git_stat220.md&#34;&gt;Getting setup with Git and
GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using a local install of R/RStudio, then you will need to
install Git.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing Git&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Directions for both Windows &amp;amp; Mac here:
&lt;a href=&#34;http://happygitwithr.com/install-git.html&#34; class=&#34;uri&#34;&gt;http://happygitwithr.com/install-git.html&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you are using &lt;strong&gt;maize&lt;/strong&gt;, then there is nothing you need to
install.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Windows users should follow Option 1 in 6.2.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mac users can follow Option 1 in 6.3 if comfortable, otherwise
follow Option 2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux users can follow 6.4.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;slack&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Slack&lt;/h2&gt;
&lt;p&gt;We will use Slack for all course communication. &lt;a href=&#34;https://join.slack.com/t/stat220-fa21/shared_invite/zt-uvpbbjgj-cyr3olDzY~s7PkaY~Vu7Sg&#34;&gt;Sign up for our course
Slack team
here&lt;/a&gt;!
You will need to create an account with a username, and log in to read
and post. You can use Slack right from a &lt;a href=&#34;https://stat220-fa21.slack.com&#34;&gt;web
browser&lt;/a&gt;, or you can download a
standalone Slack application to your
&lt;a href=&#34;https://slack.com/downloads/osx&#34;&gt;Mac&lt;/a&gt;,
&lt;a href=&#34;https://slack.com/downloads/windows&#34;&gt;Windows&lt;/a&gt;,
&lt;a href=&#34;https://slack.com/downloads/linux&#34;&gt;Linux&lt;/a&gt; and/or
&lt;a href=&#34;https://slack.com/downloads/android&#34;&gt;Android&lt;/a&gt;/&lt;a href=&#34;https://slack.com/downloads/ios&#34;&gt;iOS&lt;/a&gt;
device. You can control whether you receive notifications on new posts
by going to Preferences, as well as decide which ‚Äòchannels‚Äô to subscribe
to. A ‚Äòchannel‚Äô is a discussion thread, which is used to organize
communications into topics. You can learn more about Slack features
&lt;a href=&#34;https://slack.com/help/articles/218080037-Getting-started-for-new-Slack-users&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Several channels have been set up for specific parts of the course. Feel
free to ask questions anytime. You can browse the available channels in
our team by clicking on ‚ÄúChannels‚Äù on the left-hand panel.&lt;/p&gt;
&lt;p&gt;There is also an #anonymous channel that you can use if you‚Äôd like to
ask a question or provide a comment anonymously. To have a post appear
anonymously in this channel, compose a direct message to yourself (by
clicking on your username in the ‚ÄòDirect Messages‚Äô menu on the left
panel) that begins with /anon #anonymous your question. Then the text
your question will be sent to the #anonymous channel by the anonymous
bot. Zoom For synchronous class meeting and office hours we will use the
Zoom video conferencing software. I recommend downloading the Zoom app
for your operating system.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;latex&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LaTeX&lt;/h2&gt;
&lt;p&gt;If you want to render R Markdown documents to PDFs, then you need to
install LaTeX. Below are the recommended installers for Windows and Mac:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.tug.org/mactex/&#34;&gt;MacTeX&lt;/a&gt; for Mac (3.2GB)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://miktex.org/download&#34;&gt;MiKTeX&lt;/a&gt; for Windows (190MB)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Alternatively, you can install the &lt;code&gt;tinytex&lt;/code&gt; R package by running
&lt;code&gt;install.packages(&#34;tinytex&#34;)&lt;/code&gt; in the console.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are using maize, then there is nothing you need to install.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level2 appendix&#34;&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;This installation guide is based on the guide from stat545.com.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;resuse&#34; class=&#34;section level2 appendix&#34;&gt;
&lt;h2&gt;Resuse&lt;/h2&gt;
&lt;p&gt;This work is licensed under the CC BY-NC 3.0 Creative Commons License.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
